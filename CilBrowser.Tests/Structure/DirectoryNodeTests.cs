/* CIL Browser (https://github.com/MSDN-WhiteKnight/CilBrowser)
 * Copyright (c) 2023,  MSDN.WhiteKnight 
 * License: BSD 3-Clause */
using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CilBrowser.Core;
using CilBrowser.Core.Structure;

namespace CilBrowser.Tests.Structure
{
    [TestClass]
    public class DirectoryNodeTests
    {
        [TestMethod]
        public void Test_Render()
        {
            string expected = @"<html><head><title>.NET CIL Browser - test</title><style>.memberid { color: rgb(43, 145, 175); text-decoration: none; }</style></head>
<body><p>.NET CIL Browser</p><h1>Source directory: test</h1>
<h2>Subdirectories</h2><table cellpadding=""2px""><tr><td><img src=""img/dir.png""/></td><td><a href=""./apples/index.html"">apples</a></td></tr><tr><td><img src=""img/dir.png""/></td><td><a href=""./oranges/index.html"">oranges</a></td></tr></table>
<h2>Files</h2><table cellpadding=""2px""><tr><td><img src=""img/file.png""/></td><td><a href=""bar.txt.html"">bar.txt</a></td></tr><tr><td><img src=""img/file.png""/></td><td><a href=""foo.txt.html"">foo.txt</a></td></tr></table><hr/><p>Generated by <a href=""https://github.com/MSDN-WhiteKnight/CilBrowser"">CIL Browser</a></p>
</body></html>";

            //render top-level ToC
            DirectoryNode tree = new DirectoryNode("test");
            DirectoryNode subdir1 = new DirectoryNode("apples");
            subdir1.AddPage(new FileNode("dummy"));
            tree.AddDirectory(subdir1);
            DirectoryNode subdir2 = new DirectoryNode("oranges");
            subdir2.AddPage(new FileNode("dummy"));
            tree.AddDirectory(subdir2);
            tree.AddPage(new FileNode("c:\\test\\bar.txt"));
            tree.AddPage(new FileNode("c:\\test\\foo.txt"));
            string html = tree.RenderToString(new HtmlGenerator(), new CilBrowserOptions());

            //normalize line endings
            html = html.Replace("\r\n", "\n");
            expected = expected.Replace("\r\n", "\n");

            Assert.AreEqual(expected, html);
        }
    }
}

